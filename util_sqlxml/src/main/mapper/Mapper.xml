<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.transactional.mapper.TransactionlMapper">

    <!-- foreach 循环插入  -->
    <insert id="saveStus" parameterType="list">
        INSERT INTO `student` (id, Sname, Sage, Ssex) VALUES
        <foreach collection="list" separator="," item="stu">
            (
                #{stu.id}, #{stu.name}, #{stu.age}, #{stu.sex}
            )
        </foreach>
    </insert>

    <!--  foreach 循环查询  -->
    <!--  此处可以是 List 也可以 是 Array, 数组和集合-->
    <!--  对应的sql 为 : select * from `xx` where id in (id1, id2, id3, ...)
          所以此处, 跟foreach insert 不同, 就在 open 和 close
     -->
    <select id="selectByIdList">
        SELECT * FROM `student` WHERE id IN
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <!-- foreach 其他使用场景
         如数据库中有一个字段, type: 是 varchar 类型, 如: type = "1", type = "1,2", type = "3", ...
         这时前端, 出入type参数是数组 String[] types ; 那么我们在数据库中查询的结果, 就应该是 type ="1",
         和 type = "1,2", 所以这里是不能用, where type in("1", "2") 的语法
         这时就需要用到, foreach 组合 like concat ('%', #{type}, '%') 语法
    -->
    <select id="selectByArray" >
        select * from `student` where 1=1 AND
        <foreach collection="array" separator="or" item="type" index="index">
            type LIKE CONCAT ('%', #{type}, '%')
        </foreach>

    </select>

    <select id="">
        select * from `aa` type like concat (1) or
    </select>
</mapper>